#filter_form
  .row
    .form-group.col-md-3#select_param_form
      - prm_def = @simulator.parameter_definitions.map {|x| [x.key, {"type" => x.type, "default" => x.default}] }
      = select_tag "query[][param]", options_for_select(Hash[*prm_def.flatten]), class: 'form-control'
    .form-group.col-md-2#select_matcher_form
      = select_tag "query[][matcher]", options_for_select(["",""]), class: 'form-control'
    .form-group.col-md-3#select_value_form
      = text_field_tag "query[][value]", "", class: 'form-control'
    .col-md-6
.btn#add_filter_form Add more filter

:javascript
  $(function() {
    var cloned = $('#filter_form').html();
    $('#add_filter_form').click(function() {
      $('#add_filter_form').before(cloned);
      $('.row:last select', $(this).parent()).trigger('change');
    });
  });

  $(function() {
    $("body").on("change", "#select_param_form select", function(){
      $("#select_matcher_form option",$(this).parent().parent()).remove();
      var matcher_form_selector = $("#select_matcher_form",$(this).parent().parent());
      var matcher_val;
      var matcher_text;
      if($(":selected",this).attr('type') == "Integer" || $(":selected",this).attr('type') == "Float") {
        matcher_val = #{raw ParameterSetFilter::NumTypeMatchers.to_json};
        matcher_text = #{raw ParameterSetFilter::NumTypeMatcherStrings.to_json};
      } else if($(":selected",this).attr('type') == "String") {
        matcher_val = #{raw ParameterSetFilter::StringTypeMatchers.to_json};
        matcher_text = #{raw ParameterSetFilter::StringTypeMatchers.to_json};
      }

      for(i in matcher_val){
        $("select",matcher_form_selector).append("<option value=\"\"></option>");
        $("option:nth-child("+(parseInt(i)+1)+")",matcher_form_selector).val(matcher_val[i]).text(matcher_text[i]);
      }
    });
    var parameter_form_selector = $("#select_param_form select");
    parameter_form_selector.val("#{@simulator.parameter_definitions.first.key}");
    parameter_form_selector.trigger("change");
  });
